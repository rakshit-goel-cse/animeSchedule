{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\reactApp\\\\animeScheduler\\\\animeschedfront\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [animename, setanimename] = useState(\"\");\n  const [searched, setsearched] = useState(false);\n  const search = async () => {\n    if (false && animename !== \"\") {\n      try {\n        let url = `https://animeschedule.net/api/v3/anime?q=${animename}`;\n        console.log(\"URL FOR FETCH\", url);\n        const response = await fetch(url);\n        console.log(\"Response FROM SEARCH fetch-\", response);\n        const data = await response.data();\n        console.log(\"DATA FROM SEARCH-\", data);\n        alert(\"anime search done\");\n        return data;\n      } catch (error) {\n        console.error('Error during search:', error);\n      }\n    }\n  };\n  const handleSearch = () => {\n    alert(\"anime search\");\n\n    /*let storedlist=sessionStorage.getItem('animelist');\r\n        if(storedlist){\r\n            let animelist=JSON.parse(storedlist);\r\n            animelist=[...animelist,animename];\r\n            sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n        return setanimename('');*/\n    search();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: searched ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: handleSearch()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body_home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Anime name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Case Sensitive\",\n            value: animename,\n            onChange: e => setanimename(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setsearched(true);\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Search, \"kuIFHbv2pi6w2K5+CWcY82sVSak=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","animename","setanimename","searched","setsearched","search","url","console","log","response","fetch","data","alert","error","handleSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/reactApp/animeScheduler/animeschedfront/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Search() {\r\n  const [animename, setanimename] = useState(\"\");\r\n  const [searched, setsearched] = useState(false);\r\n\r\n  const search =async () => {\r\n    if (false &&  animename !== \"\") {\r\n      try{\r\n      let url = `https://animeschedule.net/api/v3/anime?q=${animename}`;\r\n      console.log(\"URL FOR FETCH\", url);\r\n      const response = await fetch(url);\r\n      console.log(\"Response FROM SEARCH fetch-\", response);\r\n      const data = await response.data();\r\n      console.log(\"DATA FROM SEARCH-\", data);\r\n      alert(\"anime search done\");\r\n      return data;\r\n      }\r\n      catch (error) {\r\n        console.error('Error during search:', error);\r\n      }\r\n    }\r\n    };\r\n  \r\n  const handleSearch = () => {\r\n    alert(\"anime search\");\r\n\r\n    /*let storedlist=sessionStorage.getItem('animelist');\r\n        if(storedlist){\r\n            let animelist=JSON.parse(storedlist);\r\n            animelist=[...animelist,animename];\r\n            sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n        return setanimename('');*/\r\n        search();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {searched ? (\r\n        <div>{handleSearch()}</div>\r\n      ) : (\r\n        <div className=\"body_home\">\r\n          <div className=\"container\">\r\n            <label>\r\n              Anime name:\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Case Sensitive\"\r\n                value={animename}\r\n                onChange={(e) => setanimename(e.target.value)}\r\n              />\r\n            </label>\r\n            <button\r\n              onClick={() => {\r\n                setsearched(true);\r\n              }}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMW,MAAM,GAAE,MAAAA,CAAA,KAAY;IACxB,IAAI,KAAK,IAAKJ,SAAS,KAAK,EAAE,EAAE;MAC9B,IAAG;QACH,IAAIK,GAAG,GAAI,4CAA2CL,SAAU,EAAC;QACjEM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAAC;QACjC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;QACjCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,QAAQ,CAAC;QACpD,MAAME,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,IAAI,CAAC;QACtCC,KAAK,CAAC,mBAAmB,CAAC;QAC1B,OAAOD,IAAI;MACX,CAAC,CACD,OAAOE,KAAK,EAAE;QACZN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACA,CAAC;EAEH,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBF,KAAK,CAAC,cAAc,CAAC;;IAErB;AACJ;AACA;AACA;AACA;AACA;AACA;IACQP,MAAM,CAAC,CAAC;EACd,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,EACGZ,QAAQ,gBACPP,OAAA;MAAAmB,QAAA,EAAMD,YAAY,CAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAE3BvB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAL,QAAA,eACxBnB,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBnB,OAAA;UAAAmB,QAAA,GAAO,aAEL,eAAAnB,OAAA;YACEyB,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,gBAAgB;YAC5BC,KAAK,EAAEtB,SAAU;YACjBuB,QAAQ,EAAGC,CAAC,IAAKvB,YAAY,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACRvB,OAAA;UACE+B,OAAO,EAAEA,CAAA,KAAM;YACbvB,WAAW,CAAC,IAAI,CAAC;UACnB,CAAE;UAAAW,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN,gBACD,CAAC;AAEP;AAACnB,EAAA,CA/DQD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAiEf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}