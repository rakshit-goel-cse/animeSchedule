{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\reactApp\\\\animeScheduler\\\\animeschedfront\\\\src\\\\components\\\\ShowData.js\";\nimport React from \"react\";\nimport './ShowData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowData({\n  data,\n  setdata,\n  ishome\n}) {\n  console.log(\"Inside Show Data-\", data);\n  console.log(\"is home-\", ishome);\n\n  //note note- 1 items not refreshing when item remove button clicked, 2 show some kind of change when item is added\n\n  const englishName = names => {\n    if (names && 'english' in names) {\n      return names.english;\n    }\n    return '';\n  };\n  const isRouteInAnimeList = (animeList, routeToCheck) => {\n    return animeList.some(anime => anime === routeToCheck);\n  };\n  const removeItemFromData = itemRoute => {\n    let newData = data.filter(item => item.route !== itemRoute);\n    setdata(newData);\n  };\n  const addToList = (e, route) => {\n    console.log(\"SAVING ANIME IN SESSION- \", route);\n    let storedlist = sessionStorage.getItem('animelist');\n    let animelist = [];\n    console.log(\"STORED LIST- \", storedlist);\n    if (storedlist) {\n      animelist = JSON.parse(storedlist);\n    }\n    if (route) {\n      if (!ishome && isRouteInAnimeList(animelist, route)) {\n        return;\n      }\n      if (ishome) {\n        animelist = animelist.filter(item => item !== route);\n        sessionStorage.setItem('animelist', JSON.stringify(animelist));\n        console.log(\"REMOVE ITEM FROM LIST-\", animelist);\n        removeItemFromData(route);\n      } else {\n        const button = e.target;\n        if (button.textContent === 'Remove') {\n          console.log(\"inside remove\");\n          animelist = animelist.filter(item => item !== route);\n          button.style.backgroundColor = 'green';\n          button.style.color = 'white';\n          button.textContent = 'Add to List';\n        } else {\n          console.log(\"inside add\");\n          animelist = [...animelist, route];\n          button.style.backgroundColor = 'red';\n          button.style.color = 'white';\n          button.textContent = 'Remove';\n        }\n        sessionStorage.setItem('animelist', JSON.stringify(animelist));\n      }\n      //sessionStorage.setItem('animelist',JSON.stringify(animelist));\n    }\n  };\n  const changeTimeZone = utcDateString => {\n    const utcDate = new Date(utcDateString);\n    // Convert UTC to IST\n    const istDateString = utcDate.toLocaleString(\"en-US\", {\n      timeZone: \"Asia/Kolkata\"\n    });\n    return istDateString;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [item.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 27\n          }, this), englishName(item.names)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Dub Time - \", changeTimeZone(item.dubTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"episode-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), \" \", item.episodes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"status-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), \" \", item.status, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"release year-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), \" \", item.year, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              addToList(e, item.route);\n            },\n            children: ishome ? \"Remove\" : \"Add to List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img.animeschedule.net/production/assets/public/img/\" + item.imageVersionRoute,\n          alt: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n_c = ShowData;\nexport default ShowData;\nvar _c;\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ShowData","data","setdata","ishome","console","log","englishName","names","english","isRouteInAnimeList","animeList","routeToCheck","some","anime","removeItemFromData","itemRoute","newData","filter","item","route","addToList","e","storedlist","sessionStorage","getItem","animelist","JSON","parse","setItem","stringify","button","target","textContent","style","backgroundColor","color","changeTimeZone","utcDateString","utcDate","Date","istDateString","toLocaleString","timeZone","children","map","className","class","title","fileName","_jsxFileName","lineNumber","columnNumber","dubTime","episodes","status","year","onClick","src","imageVersionRoute","alt","description","id","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/reactApp/animeScheduler/animeschedfront/src/components/ShowData.js"],"sourcesContent":["import React from \"react\";\r\nimport './ShowData.css';\r\n\r\nfunction ShowData({data,setdata,ishome}) {\r\n    console.log(\"Inside Show Data-\",data);\r\n    console.log(\"is home-\",ishome);\r\n    \r\n    //note note- 1 items not refreshing when item remove button clicked, 2 show some kind of change when item is added\r\n\r\n    const englishName = (names) => {\r\n      if(names && 'english' in names){\r\n        return names.english;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    const isRouteInAnimeList = (animeList, routeToCheck) => {\r\n      return animeList.some((anime) => anime === routeToCheck);\r\n    };\r\n\r\n    const removeItemFromData = (itemRoute) => {\r\n      let newData = data.filter(item=>item.route!==itemRoute);\r\n      setdata(newData);\r\n    }\r\n\r\n    const addToList = (e,route) =>{\r\n      console.log(\"SAVING ANIME IN SESSION- \",route);\r\n      let storedlist=sessionStorage.getItem('animelist');\r\n      let animelist=[];\r\n      console.log(\"STORED LIST- \",storedlist);\r\n      if(storedlist){animelist=JSON.parse(storedlist);}\r\n        if(route){\r\n            if(!ishome && isRouteInAnimeList(animelist,route)){return}\r\n            if(ishome){\r\n              animelist=animelist.filter(item=>item!==route);\r\n              sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n              console.log(\"REMOVE ITEM FROM LIST-\",animelist);\r\n              removeItemFromData(route);\r\n            }\r\n            else{\r\n              const button=e.target;\r\n              if(button.textContent === 'Remove'){\r\n                console.log(\"inside remove\");\r\n                animelist=animelist.filter(item=>item!==route);\r\n                button.style.backgroundColor = 'green';\r\n                button.style.color = 'white';\r\n                button.textContent = 'Add to List';\r\n              }\r\n              else{\r\n                console.log(\"inside add\");\r\n                animelist=[...animelist,route];\r\n                button.style.backgroundColor = 'red';\r\n                button.style.color = 'white';\r\n                button.textContent = 'Remove';\r\n              }\r\n              sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n            }\r\n            //sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n    }\r\n\r\n    const changeTimeZone = (utcDateString) => {\r\n      const utcDate = new Date(utcDateString);\r\n      // Convert UTC to IST\r\n      const istDateString = utcDate.toLocaleString(\"en-US\", { timeZone: \"Asia/Kolkata\" });\r\n      return istDateString;\r\n    }\r\n\r\n    return(\r\n      <div>\r\n      {data.map((item) => (\r\n        <div key={item.id} className=\"card\">\r\n          <div class=\"content\">\r\n          <h5>{item.title}<br></br>{englishName(item.names)}</h5>\r\n          <h6>Dub Time - {changeTimeZone(item.dubTime)}</h6>\r\n         \r\n          <p>\r\n          <b>episode-</b> {item.episodes} <br></br>\r\n          <b>status-</b> {item.status} <br></br>\r\n          <b>release year-</b> {item.year}\r\n          <button onClick={(e)=>{addToList(e,item.route)}}>{ishome ? \"Remove\" :\"Add to List\"}</button>\r\n          </p>\r\n          \r\n          <img src={\"https://img.animeschedule.net/production/assets/public/img/\"+item.imageVersionRoute}\r\n           alt={item.description}></img>\r\n         </div> \r\n        </div>\r\n      ))}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ShowData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}