{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\reactApp\\\\animeScheduler\\\\animeschedfront\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ShowData from \"./ShowData\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [animename, setanimename] = useState(\"\");\n  const [searched, setsearched] = useState(false);\n  const [data, setdata] = useState([]);\n  const search = async () => {\n    if (animename !== \"\") {\n      try {\n        const urrl = \"http://localhost:5000/api/anime?q=\" + animename;\n        //const urrl = \"/api/anime?q=\" + animename;\n        console.log(\"URL \", urrl);\n        const res = await axios.get(urrl);\n        console.log(\"RESPONSE FROM API CALL-\", res.data);\n        setdata(res.data.anime);\n        setsearched(true);\n        //console.log(\"DATA FROM API CALL-\",data);\n      } catch (error) {\n        console.error(\"Error during search:\", error);\n        alert(\"try again\");\n      }\n    }\n  };\n  const showList = () => {\n    console.log(\"anime search \" + data);\n    return \"\";\n    /*let storedlist=sessionStorage.getItem('animelist');\r\n        if(storedlist){\r\n            let animelist=JSON.parse(storedlist);\r\n            animelist=[...animelist,animename];\r\n            sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n        return setanimename('');*/\n    //console.log(\"SEARCH init-\",search());\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: searched && data.length > 0 ? /*#__PURE__*/_jsxDEV(ShowData, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body_home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Anime name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Case Sensitive\",\n            value: animename,\n            onChange: e => {\n              setanimename(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            search(e);\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Search, \"V7eBAwA+DE5+R1iHtn04AeQKg5Q=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","ShowData","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","animename","setanimename","searched","setsearched","data","setdata","search","urrl","console","log","res","get","anime","error","alert","showList","children","length","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/reactApp/animeScheduler/animeschedfront/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ShowData from \"./ShowData\";\r\nimport axios from \"axios\";\r\n\r\nfunction Search() {\r\n  const [animename, setanimename] = useState(\"\");\r\n  const [searched, setsearched] = useState(false);\r\n  const [data, setdata] = useState([]);\r\n\r\n  const search = async () => {\r\n    if (animename !== \"\") {\r\n      try {\r\n        const urrl = \"http://localhost:5000/api/anime?q=\" + animename;\r\n        //const urrl = \"/api/anime?q=\" + animename;\r\n        console.log(\"URL \", urrl);\r\n\r\n        const res = await axios.get(urrl);\r\n        console.log(\"RESPONSE FROM API CALL-\", res.data);\r\n        setdata(res.data.anime);\r\n        setsearched(true);\r\n        //console.log(\"DATA FROM API CALL-\",data);\r\n      } catch (error) {\r\n        console.error(\"Error during search:\", error);\r\n        alert(\"try again\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  const showList = () => {\r\n    \r\n    console.log(\"anime search \"+data);\r\n    return(\r\n      \"\"\r\n    );\r\n    /*let storedlist=sessionStorage.getItem('animelist');\r\n        if(storedlist){\r\n            let animelist=JSON.parse(storedlist);\r\n            animelist=[...animelist,animename];\r\n            sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n        return setanimename('');*/\r\n        //console.log(\"SEARCH init-\",search());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n      (searched && data.length > 0) ? (\r\n        <ShowData data={data} />\r\n      ) : (\r\n        <div className=\"body_home\">\r\n          <div className=\"container\">\r\n            <label>\r\n              Anime name:\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Case Sensitive\"\r\n                value={animename}\r\n                onChange={(e) => {setanimename(e.target.value)}}\r\n              />\r\n            </label>\r\n            <button\r\n              onClick={(e) => {\r\n                search(e);\r\n              }}>\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}