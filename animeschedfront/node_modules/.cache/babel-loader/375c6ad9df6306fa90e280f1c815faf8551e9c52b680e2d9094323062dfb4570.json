{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\reactApp\\\\animeScheduler\\\\animeschedfront\\\\src\\\\components\\\\Home.js\";\nimport React, { useState } from 'react';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  user,\n  setUser\n}) {\n  const handleLogin = () => {\n    // Simulate a login check (you can add actual authentication logic here)\n    if (user.trim() !== '') {\n      alert('Login successful!');\n    } else {\n      alert('Please enter a username.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body_home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: user,\n          onChange: e => setUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","user","setUser","handleLogin","trim","alert","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/reactApp/animeScheduler/animeschedfront/src/components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Home.css';\r\n\r\nfunction Home({user,setUser}) {\r\n\r\n    const handleLogin = () => {\r\n        // Simulate a login check (you can add actual authentication logic here)\r\n        if (user.trim() !== '') {\r\n          alert('Login successful!');\r\n          \r\n        } else {\r\n          alert('Please enter a username.');\r\n        }\r\n      };\r\n\r\n    return (\r\n    <div className='body_home'>\r\n    <div className='container'>\r\n    \r\n          <label>\r\n            Username:\r\n            <input\r\n              type=\"text\"\r\n              value={user}\r\n              onChange={(e) => setUser(e.target.value)}\r\n            />\r\n          </label>\r\n          <button onClick={handleLogin}>Login</button>\r\n        \r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAC;EAACC,IAAI;EAACC;AAAO,CAAC,EAAE;EAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA,IAAIF,IAAI,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBC,KAAK,CAAC,mBAAmB,CAAC;IAE5B,CAAC,MAAM;MACLA,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAEH,oBACAN,OAAA;IAAKO,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC1BR,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAEpBR,OAAA;QAAAQ,QAAA,GAAO,WAEL,eAAAR,OAAA;UACES,IAAI,EAAC,MAAM;UACXC,KAAK,EAAER,IAAK;UACZS,QAAQ,EAAGC,CAAC,IAAKT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjB,OAAA;QAAQkB,OAAO,EAAEd,WAAY;QAAAI,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACE,EAAA,GA7BQlB,IAAI;AA+Bb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}