{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\reactApp\\\\animeScheduler\\\\animeschedfront\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ShowData from \"./ShowData\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [animename, setanimename] = useState(\"\");\n  const [searched, setsearched] = useState(false);\n  const [data, setdata] = useState([]);\n  const search = async () => {\n    if (animename !== \"\") {\n      try {\n        /*\r\n         const urrl='/api';\r\n         console.log(\"URL \",urrl);\r\n         const options = { \r\n           method: 'GET', \r\n           url: urrl, \r\n           params: {q:animename}, \r\n           headers: {\"accepts\":\"application/json\"} \r\n        }; \r\n        \n        return axios.request(options)\r\n           .then(res => { setdata(res.data); })\r\n           .catch((err) => { return err; }) ;\r\n         if(data.length>0){\r\n         setsearched(true);\r\n        }\r\n         */\n\n        const response = await fetch(\"/api/anime?q=\" + animeName, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          method: \"post\"\n        });\n        console.log(\"Response FROM SEARCH fetch-\", response);\n        const data = await response.data();\n        console.log(\"DATA FROM SEARCH-\", data);\n        alert(\"anime search done\");\n        setdata(data);\n        setsearched(true);\n        return data;\n      } catch (error) {\n        console.error('Error during search:', error);\n      }\n    }\n  };\n  const showList = () => {\n    alert(\"anime search \" + animename);\n    return data;\n    /*let storedlist=sessionStorage.getItem('animelist');\r\n        if(storedlist){\r\n            let animelist=JSON.parse(storedlist);\r\n            animelist=[...animelist,animename];\r\n            sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n        return setanimename('');*/\n    //console.log(\"SEARCH init-\",search());\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: searched ? /*#__PURE__*/_jsxDEV(ShowData, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body_home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Anime name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Case Sensitive\",\n            value: animename,\n            onChange: e => {\n              setanimename(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            search(e);\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Search, \"V7eBAwA+DE5+R1iHtn04AeQKg5Q=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","ShowData","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","animename","setanimename","searched","setsearched","data","setdata","search","response","fetch","animeName","headers","method","console","log","alert","error","showList","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/reactApp/animeScheduler/animeschedfront/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ShowData from \"./ShowData\";\r\nimport axios from \"axios\";\r\n\r\nfunction Search() {\r\n  const [animename, setanimename] = useState(\"\");\r\n  const [searched, setsearched] = useState(false);\r\n  const [data, setdata] = useState([]);\r\n\r\n  const search = async () => {\r\n    if (animename !== \"\") {\r\n      \r\n      try{\r\n       \r\n       /*\r\n        const urrl='/api';\r\n        console.log(\"URL \",urrl);\r\n        const options = { \r\n          method: 'GET', \r\n          url: urrl, \r\n          params: {q:animename}, \r\n          headers: {\"accepts\":\"application/json\"} \r\n      }; \r\n      \r\n      return axios.request(options)\r\n          .then(res => { setdata(res.data); })\r\n          .catch((err) => { return err; }) ;\r\n\r\n      if(data.length>0){\r\n        setsearched(true);\r\n      }\r\n\r\n      */\r\n        \r\n      const response = await fetch(\"/api/anime?q=\"+animeName,{\r\n        headers: {\r\n          \"Content-Type\":\"application/json\"\r\n        },\r\n        method:\"post\",\r\n      });\r\n      console.log(\"Response FROM SEARCH fetch-\", response);\r\n      const data = await response.data();\r\n      console.log(\"DATA FROM SEARCH-\", data);\r\n      alert(\"anime search done\");\r\n      setdata(data);\r\n      setsearched(true);\r\n      return data;\r\n      \r\n    }\r\n      catch (error) {\r\n        console.error('Error during search:', error);\r\n      }\r\n    }\r\n    };\r\n  \r\n  const showList = () => {\r\n    \r\n    alert(\"anime search \"+animename);\r\n    return(\r\n      data\r\n    );\r\n    /*let storedlist=sessionStorage.getItem('animelist');\r\n        if(storedlist){\r\n            let animelist=JSON.parse(storedlist);\r\n            animelist=[...animelist,animename];\r\n            sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n        return setanimename('');*/\r\n        //console.log(\"SEARCH init-\",search());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {searched ? (\r\n        <ShowData data={data} />\r\n      ) : (\r\n        <div className=\"body_home\">\r\n          <div className=\"container\">\r\n            <label>\r\n              Anime name:\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Case Sensitive\"\r\n                value={animename}\r\n                onChange={(e) => {setanimename(e.target.value)}}\r\n              />\r\n            </label>\r\n            <button\r\n              onClick={(e) => {\r\n                search(e);\r\n              }}>\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}