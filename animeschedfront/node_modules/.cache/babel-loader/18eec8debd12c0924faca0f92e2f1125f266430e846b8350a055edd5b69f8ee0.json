{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\reactApp\\\\animeScheduler\\\\animeschedfront\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setpage,\n  setUser\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const handleAnimeList = rawList => {\n    if (rawList) {\n      let animeList = JSON.parse(rawList);\n    }\n  };\n  const handleLogin = () => {\n    // Simulate a login check (you can add actual authentication logic here)\n    if (username.trim() !== '') {\n      //alert('Login successful!');\n      const namesRaw = localStorage.getItem('username');\n      let names = [];\n      if (namesRaw) {\n        names = JSON.parse(namesRaw);\n        if (names.includes(username)) {\n          //get user list\n          handleAnimeList(localStorage.getItem('animelist'));\n        } else {\n          if (window.confirm(\"User does not exist, do you want to create one?\")) {\n            names = [...names, username];\n            localStorage.setItem('username', JSON.stringify(names));\n          } else {\n            return;\n          }\n        }\n      } else {\n        if (window.confirm(\"User does not exist, do you want to create one?\")) {\n          localStorage.setItem('username', JSON.stringify([username]));\n        } else {\n          return;\n        }\n      }\n      sessionStorage.setItem('user', username);\n      setUser(username);\n      setpage('Search');\n    } else {\n      alert('Please enter a username.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body_home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Case Sensitive\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"AfRD6VxGv+Gn/ZNWvgmLk5f6638=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","setpage","setUser","_s","username","setUsername","handleAnimeList","rawList","animeList","JSON","parse","handleLogin","trim","namesRaw","localStorage","getItem","names","includes","window","confirm","setItem","stringify","sessionStorage","alert","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/reactApp/animeScheduler/animeschedfront/src/components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Home.css';\r\n\r\nfunction Home({setpage,setUser}) {\r\n\r\n    const [username, setUsername] = useState('');\r\n\r\n    const handleAnimeList = (rawList) => {\r\n        if(rawList){\r\n            let animeList = JSON.parse(rawList);\r\n        }\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        // Simulate a login check (you can add actual authentication logic here)\r\n        if (username.trim() !== '') {\r\n          //alert('Login successful!');\r\n          const namesRaw=localStorage.getItem('username');\r\n          let names=[];\r\n          if(namesRaw){\r\n            names=JSON.parse(namesRaw);\r\n            if(names.includes(username)){\r\n                //get user list\r\n                handleAnimeList(localStorage.getItem('animelist'));\r\n            }\r\n            else{\r\n                if(window.confirm(\"User does not exist, do you want to create one?\")){\r\n                    names=[...names, username];\r\n                    localStorage.setItem('username',JSON.stringify(names));\r\n                }\r\n                else{return;}\r\n            }\r\n        }\r\n        else{\r\n            if(window.confirm(\"User does not exist, do you want to create one?\")){\r\n                localStorage.setItem('username',JSON.stringify([username]));\r\n            }\r\n            else{return;}\r\n        }\r\n            sessionStorage.setItem('user',username);\r\n            setUser(username);\r\n            setpage('Search');\r\n        }\r\n        else {\r\n          alert('Please enter a username.');\r\n        }\r\n      };\r\n\r\n    return (\r\n    <div className='body_home'>\r\n    <div className='container'>\r\n    \r\n          <label>\r\n            Username:\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Case Sensitive'\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n          <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}