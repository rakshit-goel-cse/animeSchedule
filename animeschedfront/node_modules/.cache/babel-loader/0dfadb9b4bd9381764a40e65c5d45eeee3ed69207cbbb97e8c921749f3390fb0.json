{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\reactApp\\\\animeScheduler\\\\animeschedfront\\\\src\\\\components\\\\ShowData.js\";\nimport React from \"react\";\nimport './ShowData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowData({\n  data,\n  setdata,\n  ishome\n}) {\n  console.log(\"Inside Show Data-\", data);\n  console.log(\"is home-\", ishome);\n\n  //note note- 1 items not refreshing when item remove button clicked, 2 show some kind of change when item is added\n\n  const englishName = names => {\n    if (names && 'english' in names) {\n      return names.english;\n    }\n    return '';\n  };\n  const isRouteInAnimeList = routeToCheck => {\n    let storedlist = sessionStorage.getItem('animelist');\n    let animelist = [];\n    console.log(\"STORED LIST- \", storedlist);\n    if (storedlist) {\n      animelist = JSON.parse(storedlist);\n      if (animelist.some(anime => anime === routeToCheck)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const removeItemFromData = itemRoute => {\n    let newData = data.filter(item => item.route !== itemRoute);\n    setdata(newData);\n  };\n  const addToList = (e, route) => {\n    console.log(\"SAVING ANIME IN SESSION- \", route);\n    let storedlist = sessionStorage.getItem('animelist');\n    let animelist = [];\n    console.log(\"STORED LIST- \", storedlist);\n    if (storedlist) {\n      animelist = JSON.parse(storedlist);\n    }\n    if (route) {\n      //if(!ishome && isRouteInAnimeList(animelist,route)){return}\n      if (ishome) {\n        animelist = animelist.filter(item => item !== route);\n        sessionStorage.setItem('animelist', JSON.stringify(animelist));\n        console.log(\"REMOVE ITEM FROM LIST-\", animelist);\n        removeItemFromData(route);\n      } else {\n        const button = e.target;\n        console.log(\"button text-\", button.textContent);\n        if (button.textContent === 'Remove') {\n          console.log(\"inside remove\");\n          animelist = animelist.filter(item => item !== route);\n          button.style.backgroundColor = 'green';\n          button.style.color = 'white';\n          button.textContent = 'Add to List';\n        } else {\n          console.log(\"inside add\");\n          animelist = [...animelist, route];\n          button.style.backgroundColor = 'red';\n          button.style.color = 'white';\n          button.textContent = 'Remove';\n        }\n        sessionStorage.setItem('animelist', JSON.stringify(animelist));\n      }\n      //sessionStorage.setItem('animelist',JSON.stringify(animelist));\n    }\n  };\n  const changeTimeZone = utcDateString => {\n    const utcDate = new Date(utcDateString);\n    // Convert UTC to IST\n    const istDateString = utcDate.toLocaleString(\"en-US\", {\n      timeZone: \"Asia/Kolkata\"\n    });\n    return istDateString;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [item.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 27\n          }, this), englishName(item.names)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Dub Time - \", changeTimeZone(item.dubTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"episode-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), \" \", item.episodes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"status-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), \" \", item.status, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"release year-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), \" \", item.year, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              addToList(e, item.route);\n            },\n            children: ishome ? \"Remove\" : isRouteInAnimeList(item.route)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img.animeschedule.net/production/assets/public/img/\" + item.imageVersionRoute,\n          alt: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}\n_c = ShowData;\nexport default ShowData;\nvar _c;\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ShowData","data","setdata","ishome","console","log","englishName","names","english","isRouteInAnimeList","routeToCheck","storedlist","sessionStorage","getItem","animelist","JSON","parse","some","anime","removeItemFromData","itemRoute","newData","filter","item","route","addToList","e","setItem","stringify","button","target","textContent","style","backgroundColor","color","changeTimeZone","utcDateString","utcDate","Date","istDateString","toLocaleString","timeZone","children","map","className","title","fileName","_jsxFileName","lineNumber","columnNumber","dubTime","episodes","status","year","onClick","src","imageVersionRoute","alt","description","id","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/reactApp/animeScheduler/animeschedfront/src/components/ShowData.js"],"sourcesContent":["import React from \"react\";\r\nimport './ShowData.css';\r\n\r\nfunction ShowData({data,setdata,ishome}) {\r\n    console.log(\"Inside Show Data-\",data);\r\n    console.log(\"is home-\",ishome);\r\n    \r\n    //note note- 1 items not refreshing when item remove button clicked, 2 show some kind of change when item is added\r\n\r\n    const englishName = (names) => {\r\n      if(names && 'english' in names){\r\n        return names.english;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    const isRouteInAnimeList = (routeToCheck) => {\r\n      let storedlist=sessionStorage.getItem('animelist');\r\n      let animelist=[];\r\n      console.log(\"STORED LIST- \",storedlist);\r\n      if(storedlist){\r\n        animelist=JSON.parse(storedlist);\r\n        if(animelist.some((anime) => anime === routeToCheck)){\r\n          return true;\r\n        }\r\n    }\r\n    return false;\r\n    };\r\n\r\n    const removeItemFromData = (itemRoute) => {\r\n      let newData = data.filter(item=>item.route!==itemRoute);\r\n      setdata(newData);\r\n    }\r\n\r\n    const addToList = (e,route) =>{\r\n      console.log(\"SAVING ANIME IN SESSION- \",route);\r\n      let storedlist=sessionStorage.getItem('animelist');\r\n      let animelist=[];\r\n      console.log(\"STORED LIST- \",storedlist);\r\n      if(storedlist){animelist=JSON.parse(storedlist);}\r\n        if(route){\r\n            //if(!ishome && isRouteInAnimeList(animelist,route)){return}\r\n            if(ishome){\r\n              animelist=animelist.filter(item=>item!==route);\r\n              sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n              console.log(\"REMOVE ITEM FROM LIST-\",animelist);\r\n              removeItemFromData(route);\r\n            }\r\n            else{\r\n              const button=e.target;\r\n              console.log(\"button text-\",button.textContent);\r\n              if(button.textContent === 'Remove'){\r\n                console.log(\"inside remove\");\r\n                animelist=animelist.filter(item=>item!==route);\r\n                button.style.backgroundColor = 'green';\r\n                button.style.color = 'white';\r\n                button.textContent = 'Add to List';\r\n              }\r\n              else{\r\n                console.log(\"inside add\");\r\n                animelist=[...animelist,route];\r\n                button.style.backgroundColor = 'red';\r\n                button.style.color = 'white';\r\n                button.textContent = 'Remove';\r\n              }\r\n              sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n            }\r\n            //sessionStorage.setItem('animelist',JSON.stringify(animelist));\r\n        }\r\n    }\r\n\r\n    const changeTimeZone = (utcDateString) => {\r\n      const utcDate = new Date(utcDateString);\r\n      // Convert UTC to IST\r\n      const istDateString = utcDate.toLocaleString(\"en-US\", { timeZone: \"Asia/Kolkata\" });\r\n      return istDateString;\r\n    }\r\n\r\n    return(\r\n      <div>\r\n      {data.map((item) => (\r\n        <div key={item.id} className=\"card\">\r\n          <div className=\"content\">\r\n          <h5>{item.title}<br></br>{englishName(item.names)}</h5>\r\n          <h6>Dub Time - {changeTimeZone(item.dubTime)}</h6>\r\n         \r\n          <p>\r\n          <b>episode-</b> {item.episodes} <br></br>\r\n          <b>status-</b> {item.status} <br></br>\r\n          <b>release year-</b> {item.year}\r\n          <button onClick={(e)=>{addToList(e,item.route)}}>{ishome ? \"Remove\" :isRouteInAnimeList(item.route)}</button>\r\n          </p>\r\n          \r\n          <img src={\"https://img.animeschedule.net/production/assets/public/img/\"+item.imageVersionRoute}\r\n           alt={item.description}></img>\r\n         </div> \r\n        </div>\r\n      ))}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ShowData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}